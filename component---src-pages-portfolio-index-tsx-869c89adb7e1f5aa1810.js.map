{"version":3,"sources":["webpack:///./src/components/cover.tsx","webpack:///./src/components/content-section.tsx","webpack:///./src/components/Skill.tsx","webpack:///./src/components/ProjectListItem.tsx","webpack:///./src/pages/portfolio/index.tsx"],"names":["CoverSection","styled","section","props","scrollTop","CenterArticle","article","ProfileImgWrap","div","Cover","Section","background","ContentArticle","Title","h1","ContentSection","forwardRef","ref","children","title","SkillDetail","DetailWrap","Rank","Desc","p","SkillList","SkillWrap","ListWrap","ListItem","li","Itemtitle","ProgressWrap","Progress","Bar","rate","Skill","project","desc","useState","skillIndex","setSkillIndex","currentSkill","SkillData","skill","rank","map","item","index","key","className","onClick","ItemWrap","width","ThumbnailHover","HoverCenterTitle","h2","Thumbnail","ThumbnailImage","img","ItemContent","ItemTitle","h3","ItemDesc","ItemLinks","ProjectListItem","info","github","href","icon","faGithub","size","ProjectListWrap","AboutWrap","Portfolio","projectListArticle","useRef","opacity","link","setPanelOption","projectListWidth","setProjectListWidth","listItemWrapResize","listItemCount","Math","floor","current","offsetWidth","useEffect","window","addEventListener","ProjectListData","projects"],"mappings":"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","file":"component---src-pages-portfolio-index-tsx-869c89adb7e1f5aa1810.js","sourcesContent":["import { Link } from \"gatsby\"\r\nimport React from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst CoverSection = styled.section`\r\n  position: relative;\r\n\r\n  padding: 20px 0;\r\n  height: ${props => props.scrollTop ? \"100vh\": \"600px\"};\r\n\r\n  transition: 1s all;\r\n`\r\n\r\nconst CenterArticle = styled.article`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%;\r\n  transform: translate(-50%, -50%);\r\n\r\n  width: 80%;\r\n  margin: 0 auto;\r\n  color: white;\r\n\r\n  text-align: center;\r\n`\r\n\r\nconst ProfileImgWrap = styled.div`\r\n  width: 150px;\r\n  height: 150px;\r\n  border-radius: 100%;\r\n  border: 3px solid #fff;\r\n\r\n  margin: 20px auto;\r\n`\r\n\r\nconst Cover = props => {\r\n  const {scrollTop} = props\r\n\r\n  return (\r\n    <CoverSection scrollTop={scrollTop}>\r\n      <CenterArticle>\r\n        <ProfileImgWrap></ProfileImgWrap>\r\n        <h1>강민석</h1>\r\n        <p>게임 개발자 지망생이며 웹개발이 취미입니다.</p>\r\n      </CenterArticle>\r\n    </CoverSection>\r\n  )\r\n}\r\n\r\nexport default Cover\r\n","import { Link } from \"gatsby\"\r\nimport React, {forwardRef} from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nconst Section = styled.section`\r\n  background: ${props => (props.background)};\r\n`\r\n\r\nconst ContentArticle = styled.article`\r\n  width: 80%;\r\n  min-height: 550px;\r\n  padding: 20px 0;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst Title = styled.h1`\r\n  margin-bottom: 20px;\r\n`\r\n\r\nconst ContentSection = forwardRef<HTMLDivElement>((props, ref)=> {\r\n  const {children, title, background} = props;\r\n  return (\r\n    <Section background={background}>\r\n      <ContentArticle ref={ref}>\r\n        {title && <Title>{title}</Title>}\r\n        {children}\r\n      </ContentArticle>\r\n    </Section>\r\n  )\r\n})\r\n\r\nexport default ContentSection\r\n","import React, { useState } from \"react\"\r\nimport styled from \"styled-components\"\r\n\r\nimport SkillData from \"../json/skill.json\"\r\n\r\nconst SkillDetail = styled.div`\r\n  position: relative;\r\n  float: left;\r\n  width: 50%;\r\n  height: 100%;\r\n  padding: 10px;\r\n  background: #fff;\r\n`\r\n\r\nconst DetailWrap = styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%; \r\n  transform: translate(-50%,-50%);\r\n`\r\n\r\nconst Rank = styled.div`\r\n  margin: 0 auto;\r\n  text-align: center;\r\n  width: 150px;\r\n  height: 150px;\r\n  line-height: 150px;\r\n  background: #ccc;\r\n  font-size: 95px;\r\n  color: #fff;\r\n  margin-bottom: 10px;\r\n`\r\nconst Title = styled.h1`\r\n  text-align: center;\r\n`\r\nconst Desc = styled.p`\r\n  text-align: left;\r\n`\r\nconst SkillList = styled.div`\r\n  position: relative;\r\n  float: right;\r\n  width: 50%;\r\n  height: 100%;\r\n  padding: 10px;\r\n  background: #fff;\r\n`\r\n\r\nconst SkillWrap = styled.div`\r\n  height: 500px;\r\n`\r\n\r\nconst ListWrap= styled.div`\r\n  position: absolute;\r\n  left: 50%;\r\n  top: 50%; \r\n  transform: translate(-50%,-50%);\r\n  width: 100%;\r\n\r\n  ul {\r\n    list-style: none;\r\n    margin: 0;\r\n  }\r\n\r\n  .seleted {\r\n    background: #ccc;\r\n  }\r\n`\r\nconst ListItem = styled.li`\r\n  height: 40px;\r\n  padding-left: 30px;\r\n  cursor: pointer;\r\n  margin: 0;\r\n  position: relative;\r\n`\r\nconst Itemtitle = styled.p`\r\n  float:left;\r\n  width: 160px;\r\n  margin: 0;\r\n  line-height: 40px;\r\n`\r\nconst ProgressWrap = styled.div`\r\n  float:left;\r\n`\r\n\r\nconst Progress = styled.div`\r\n  position: absolute;\r\n  \r\n  background: #ccc;\r\n  width: 320px;\r\n  height: 80%;\r\n  top: 50%;\r\n\r\n  transform: translateY(-50%);\r\n`\r\n\r\nconst Bar = styled.div`\r\n  float: left;\r\n  height: 100%;\r\n  background: #000;\r\n\r\n  width: ${props => props.rate}%;\r\n`\r\n\r\nconst Skill = props => {\r\n  const { project, desc } = props;\r\n  const [ skillIndex, setSkillIndex ] = useState(-1);\r\n  const currentSkill = SkillData.skill[skillIndex];\r\n\r\n  return (\r\n    <SkillWrap>\r\n      <SkillDetail>\r\n        { currentSkill &&\r\n          <DetailWrap>\r\n            <Rank>{currentSkill.rank}</Rank>\r\n            <Title>{currentSkill.title}</Title>\r\n            <Desc>{currentSkill.desc}</Desc>\r\n          </DetailWrap>\r\n        }\r\n      </SkillDetail>\r\n      <SkillList>\r\n        <ListWrap>\r\n          <ul>\r\n            {SkillData.skill.map((item:any, index:number) => {\r\n              return (\r\n                <ListItem key={index} className={skillIndex==index ? \"seleted\" : \"\"} onClick={ () => { setSkillIndex(skillIndex===index? -1: index); }}>\r\n                  <Itemtitle>{item.title}</Itemtitle>\r\n                  <ProgressWrap>\r\n                    <Progress>\r\n                      <Bar rate={item.rate}></Bar>\r\n                    </Progress>\r\n                  </ProgressWrap>\r\n                </ListItem>\r\n              )\r\n            })}\r\n          </ul>\r\n        </ListWrap>\r\n      </SkillList>\r\n    </SkillWrap>\r\n  )\r\n}\r\n\r\nexport default Skill","import React from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faGithub } from \"@fortawesome/free-brands-svg-icons\";\r\n\r\nconst ItemWrap = styled.div`\r\n  display: inline-block;\r\n\r\n  width: ${props => props.width}px;\r\n  margin: 0 auto;\r\n  border: 1px solid #000;\r\n  border-radius: 5px;\r\n  margin-bottom: 10px;\r\n  margin-right: 10px;\r\n\r\n`\r\n\r\nconst ThumbnailHover = styled.div`\r\n  position: absolute;\r\n  height: 100%;\r\n  width: 100%;\r\n  background: #00000080;\r\n  opacity: 0;\r\n  transition: 0.35s opacity;\r\n`\r\n\r\nconst HoverCenterTitle = styled.h2`\r\n  position: absolute;\r\n  text-align: center;\r\n  top: 50%;\r\n  transform: translateY(-50%);\r\n  width: 100%;\r\n  color: #fff;\r\n`\r\n\r\nconst Thumbnail = styled.div`\r\n  position: relative;\r\n  height: 250px;\r\n  box-sizing: border-box;\r\n  border-radius: 3px 0 0px 3px;\r\n\r\n  ${ThumbnailHover}:hover {\r\n    opacity: 1;\r\n  }\r\n`\r\n\r\nconst ThumbnailImage = styled.img`\r\n  height: 100%;\r\n  width: 100%;\r\n  background: #fff;\r\n`\r\n\r\nconst ItemContent = styled.div`\r\n  box-sizing: border-box;\r\n  padding: 10px;\r\n  height: 100%;\r\n`\r\n\r\nconst ItemTitle = styled.h3`\r\n\r\n`\r\n\r\nconst ItemDesc = styled.p`\r\n  height: 80px;\r\n  overflow: hidden;\r\n  margin: 0;\r\n`\r\n\r\nconst ItemLinks = styled.div`\r\n  height: 35px;\r\n  overflow: hidden;\r\n  text-align: right;\r\n`\r\n\r\nconst ProjectListItem = props => {\r\n  const { info, width } = props;\r\n\r\n  return (\r\n    <ItemWrap width={width}>\r\n      <Thumbnail>\r\n        <ThumbnailHover>\r\n          <HoverCenterTitle>자세히 보기</HoverCenterTitle>\r\n        </ThumbnailHover>\r\n        <ThumbnailImage></ThumbnailImage>\r\n      </Thumbnail>\r\n      <ItemContent>\r\n        <ItemTitle>\r\n          {info.title}\r\n        </ItemTitle>\r\n        <ItemDesc>\r\n          {info.desc}\r\n        </ItemDesc>\r\n        <ItemLinks>\r\n          {info.github && <a href={info.github}>\r\n            <FontAwesomeIcon icon={faGithub} size=\"2x\"/>\r\n          </a>}\r\n        </ItemLinks>\r\n      </ItemContent>\r\n    </ItemWrap>\r\n  )\r\n}\r\n\r\nexport default ProjectListItem","import React, { useState, useEffect, useRef } from \"react\"\r\nimport styled from \"styled-components\"\r\nimport { Link } from \"gatsby\"\r\n\r\nimport Layout from \"../../components/layouts/page-layout\"\r\nimport Image from \"../../components/image\"\r\nimport SEO from \"../../components/seo\"\r\n\r\nimport BlackPanel from \"../../components/black-panel\"\r\nimport Cover from \"../../components/cover\"\r\nimport ContentSection from \"../../components/content-section\"\r\nimport Skill from \"../../components/Skill\"\r\nimport ProjectListItem from \"../../components/ProjectListItem\"\r\n\r\nimport ProjectListData from \"../../json/project-list.json\"\r\n\r\nconst listItemWidth = 400;\r\nconst listItemMargin = 10;\r\n\r\nconst ProjectListWrap = styled.div`\r\n  width: ${props => props.width}px;\r\n  margin: 0 auto;\r\n`\r\n\r\nconst AboutWrap = styled.div`\r\n  padding-top: 100px;\r\n  text-align: center;\r\n`\r\n\r\nconst Portfolio = props => {\r\n  const projectListArticle = useRef<HTMLDivElement>(null);\r\n  const { scrollTop } = props;\r\n  const [panelOption, setPanelOption] = useState({\r\n    opacity: 1,\r\n    link: '',\r\n  })\r\n\r\n  const [projectListWidth, setProjectListWidth] = useState(0);\r\n\r\n  const listItemWrapResize = () => {\r\n    const listItemCount = Math.floor(projectListArticle.current.offsetWidth / listItemWidth);\r\n    setProjectListWidth(listItemCount * (listItemWidth+listItemMargin));\r\n  }\r\n\r\n  useEffect(() => { \r\n    setPanelOption({opacity: 0, link: ''})\r\n    listItemWrapResize();\r\n    window.addEventListener('resize', listItemWrapResize)\r\n  }, [])\r\n\r\n  return (\r\n    <Layout>\r\n      <SEO title=\"Home\" />\r\n      {/* <BlackPanel opacity={panelOption.opacity} link={panelOption.link}/> */}\r\n      <Cover scrollTop={scrollTop}></Cover>\r\n\r\n      <ContentSection title=\"About\" background=\"#fff\">\r\n        {/*<div style={{ maxWidth: `300px`, marginBottom: `1.45rem`, margin: \"0 auto\" }}>\r\n          <Image />\r\n        </div>*/}\r\n        <AboutWrap>\r\n          <h2>\"프로그래머가 되고싶어 외길을 걸어온 <b>강민석</b>입니다\"</h2>\r\n          <h4>더 많은 기회와 배움을 위해 제주도에서 서울로, 군대에서도 배우고싶어 SW개발병으로, 지금도 멈추지 않고 프로그래머가 되기위해 도전중입니다.</h4>\r\n        </AboutWrap>\r\n      </ContentSection>\r\n\r\n      <ContentSection title=\"Skill\" background=\"#f5f5f5\">\r\n        <Skill></Skill>\r\n      </ContentSection>\r\n\r\n      <ContentSection title=\"Project\" background=\"#e6e5e5\" ref={projectListArticle}>\r\n        <ProjectListWrap width={projectListWidth}>\r\n          {ProjectListData.projects.map((item:any, index:number) => {\r\n            return (\r\n              <ProjectListItem info={item} key={index} width={listItemWidth}>\r\n              </ProjectListItem>\r\n            )\r\n          })}\r\n        </ProjectListWrap>\r\n      </ContentSection>\r\n    </Layout>\r\n  )\r\n}\r\n\r\nexport default Portfolio\r\n"],"sourceRoot":""}